// Generated by CoffeeScript 1.8.0
(function() {
  var X, fields, i, lines, ln, m, means, names, pca, request, row, scatter, sums, v, view_height, view_width, xs, ys, _i, _j, _len, _len1;

  request = new XMLHttpRequest();

  request.open('GET', 'eigenwords_google.txt', false);

  request.send(null);

  lines = request.responseText.trim().split("\n");

  X = new Array(lines.length);

  names = new Array(lines.length);

  for (i = _i = 0, _len = lines.length; _i < _len; i = ++_i) {
    ln = lines[i];
    fields = ln.split(" ");
    names[i] = fields[0];
    X[i] = new Float32Array((function() {
      var _j, _len1, _ref, _results;
      _ref = fields.slice(1);
      _results = [];
      for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
        v = _ref[_j];
        _results.push(parseFloat(v));
      }
      return _results;
    })());
  }

  m = X.length;

  sums = 0;

  for (_j = 0, _len1 = X.length; _j < _len1; _j++) {
    row = X[_j];
    sums = numeric.add(row, sums);
  }

  means = numeric.div(sums, m);

  means = numeric.rep([m], means);

  X = numeric.sub(X, means);

  pca = numeric.svd(X);

  xs = numeric.dot(X, pca.V[0]);

  ys = numeric.dot(X, pca.V[1]);

  view_width = 700;

  view_height = 500;

  Kinetic.pixelRatio = 2;

  scatter = new Kinetic.Scatter({
    container: 'container',
    width: view_width,
    height: view_height,
    hitGraphEnabled: false,
    draggable: true
  });

  scatter.initPoints(xs, ys);

  window.scatter = scatter;

}).call(this);

//# sourceMappingURL=scatter.js.map
